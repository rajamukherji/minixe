<:print("utils.xe\\n")>

<!function "!for":
	var Var := Attributes[1]
	var From := Attributes[2]
	var To := Attributes[3]
	var Content2 := []
	for X in From .. To do
		for Y in Content do
			append(Content2, eval(Y, {Var is X}, []))
		end
	end
	ret Content2
>

<!function "!if":
	var Cond := expand(Attributes[1]) and "then" or "else"
	all(Node:content for Node in Content if Node:tag = Cond)
>

<!function "!when":
	var Value := expand(Attributes[1])
	var Case := [], Else := [], Result := Else
	for Node in Content do
		if Node:tag = "case" and Value = Node:attributes[1] then
			for X in Node:content do Case:put(X) end
			Result := Case
		end
		if Node:tag = "else" then
			for X in Node:content do Else:put(X) end
		end
	end
	ret Result
>

<!function "!let":eval(Content, Attributes, [])>

<!function "!code":
>

<!do:var Env := {}>
<!function "!set":Env[Attributes[1]] := expand(Content); nil>
<!function "!get":Env[Attributes[1]]>